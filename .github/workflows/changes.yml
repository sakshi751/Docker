name: Calling Postman Collection

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: Create Token
        id: myRequest
        run: |
          echo "res=$(curl --request GET --url "https://80934bbtrial.authentication.us10.hana.ondemand.com/oauth/token?grant_type=client_credentials" --user "${{ secrets.CLIENTID }}:${{ secrets.CLIENTSECRET }}" --header 'content-type: application/json')" >> $GITHUB_OUTPUT
 
      - name: Show Token
        run: |
          echo ${{ steps.myRequest.outputs.res}}
      
      - name: Check on failures
        if: steps.myRequest.outcome != 'success' 
        run: exit 1 
         echo ${{steps.myRequest.outcome}}
       
      - name: Check on success
        if: steps.myRequest.outcome == 'success' 
        run: 
         echo ${{steps.myRequest.outcome}}
        
      - name: Call To Get IFLow Details
        run: |   
          curl --request GET \
          --header 'authorization: Bearer ${{ fromJson(steps.myRequest.outputs.res).access_token }}' \
          --header 'content-type: application/json' \
          --url https://content-agent-engine.cfapps.us10.hana.ondemand.com/v1/contentResources?grant_type=client_credentials
          
      - name: Get Changed Files
        id: getfile
        run: |
          echo "files=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT
          
      - name: Changed File Name
        run: |
            echo ${{ steps.getfile.outputs.files }}
            
      - name: Run Docker
        uses: docker-practice/actions-setup-docker@master
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          REPO=${{ steps.getfile.outputs.files }}
          DB_NAME="${REPO// /^}"
          echo $DB_NAME
          MYPATH=$DB_NAME
          MYFILE=${MYPATH##*/}
          MYSAMPLE=${MYFILE%.*}
          echo $MYSAMPLE
          REPOS=$MYSAMPLE
          DBNAME="${REPOS//^/ }"
          echo $DBNAME
          docker run -v $PWD:/etc/newman -t postman/newman run "test/$DBNAME.json"
